import React from 'react';
import { AccessoryPosition } from '../types';

// --- SVG Components for Base Characters ---
const CharacterSun: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "sunGradient", cx: "50%", cy: "50%", r: "50%", fx: "50%", fy: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFEB3B' } }), React.createElement('stop', { offset: "80%", style: { stopColor: '#FFC107' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#F57C00' } })), React.createElement('filter', { id: "sunGlow" }, React.createElement('feGaussianBlur', { stdDeviation: "3.5", result: "coloredBlur" }), React.createElement('feMerge', null, React.createElement('feMergeNode', { in: "coloredBlur" }), React.createElement('feMergeNode', { in: "SourceGraphic" })))), React.createElement('circle', { cx: "50", cy: "50", r: "40", fill: "url(#sunGradient)", filter: "url(#sunGlow)" }), React.createElement('g', { transform: "translate(0, 5)" }, React.createElement('circle', { cx: "35", cy: "42", r: "7", fill: "white" }), React.createElement('circle', { cx: "65", cy: "42", r: "7", fill: "white" }), React.createElement('circle', { cx: "35", cy: "42", r: "4", fill: "#6D4C41" }), React.createElement('circle', { cx: "65", cy: "42", r: "4", fill: "#6D4C41" }), React.createElement('circle', { cx: "32", cy: "39", r: "2", fill: "white", opacity: "0.8" }), React.createElement('circle', { cx: "62", cy: "39", r: "2", fill: "white", opacity: "0.8" }), React.createElement('path', { d: "M 40 60 Q 50 75 60 60", stroke: "#6D4C41", strokeWidth: "4", fill: "none", strokeLinecap: "round" }))));
const CharacterPolarBear: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "polarBearGradient", cx: "50%", cy: "50%", r: "55%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFFFFF' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#E1F5FE' } })), React.createElement('filter', { id: "dropShadow" }, React.createElement('feGaussianBlur', { in: "SourceAlpha", stdDeviation: "2" }), React.createElement('feOffset', { dx: "2", dy: "4" }), React.createElement('feComponentTransfer', null, React.createElement('feFuncA', { type: "linear", slope: "0.2" })), React.createElement('feMerge', null, React.createElement('feMergeNode', null), React.createElement('feMergeNode', { in: "SourceGraphic" })))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#polarBearGradient)" }), React.createElement('circle', { cx: "28", cy: "28", r: "12", fill: "#B3E5FC" }), React.createElement('circle', { cx: "72", cy: "28", r: "12", fill: "#B3E5FC" }), React.createElement('circle', { cx: "38", cy: "52", r: "5", fill: "#212121" }), React.createElement('circle', { cx: "62", cy: "52", r: "5", fill: "#212121" }), React.createElement('path', { d: "M 50 62 C 48 60, 52 60, 50 62 L 50 68 Z", fill: "#212121" }), React.createElement('path', { d: "M 45 72 C 48 76, 52 76, 55 72", stroke: "#212121", strokeWidth: "3", fill: "none", strokeLinecap: "round" }))));
const CharacterPenguin: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "penguinBelly", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFFFFF' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#CFD8DC' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('path', { d: "M 50,2 C 23.4,2 2,23.4 2,50 C 2,76.6 23.4,98 50,98 C 76.6,98 98,76.6 98,50 C 98,23.4 76.6,2 50,2 Z", fill: "#263238" }), React.createElement('path', { d: "M 50 30 C 28 30, 28 90, 50 90 C 72 90, 72 30, 50 30 Z", fill: "url(#penguinBelly)" }), React.createElement('circle', { cx: "37", cy: "48", r: "6", fill: "white" }), React.createElement('circle', { cx: "63", cy: "48", r: "6", fill: "white" }), React.createElement('circle', { cx: "37", cy: "48", r: "3", fill: "black" }), React.createElement('circle', { cx: "63", cy: "48", r: "3", fill: "black" }), React.createElement('polygon', { points: "46,58 54,58 50,68", fill: "#FFAB00" }))));
const CharacterSnowman: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "snowGradient", cx: "30%", cy: "30%", r: "70%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFFFFF' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#E0F7FA' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "65", r: "35", fill: "url(#snowGradient)" }), React.createElement('circle', { cx: "50", cy: "30", r: "25", fill: "url(#snowGradient)" }), React.createElement('circle', { cx: "42", cy: "28", r: "3", fill: "#212121" }), React.createElement('circle', { cx: "58", cy: "28", r: "3", fill: "#212121" }), React.createElement('polygon', { points: "50,35 65,40 50,45", fill: "#FF6D00" }), React.createElement('g', { fill: "#212121" }, React.createElement('circle', { cx: "50", cy: "58", r: "2.5" }), React.createElement('circle', { cx: "50", cy: "70", r: "2.5" }), React.createElement('circle', { cx: "50", cy: "82", r: "2.5" })))));
const CharacterBear: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "bearGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#A1887F' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#6D4C41' } })), React.createElement('radialGradient', { id: "snoutGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#D7CCC8' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#BCAAA4' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#bearGradient)" }), React.createElement('circle', { cx: "25", cy: "28", r: "15", fill: "#6D4C41" }), React.createElement('circle', { cx: "75", cy: "28", r: "15", fill: "#6D4C41" }), React.createElement('circle', { cx: "50", cy: "62", r: "22", fill: "url(#snoutGradient)" }), React.createElement('circle', { cx: "38", cy: "48", r: "5", fill: "#4E342E" }), React.createElement('circle', { cx: "62", cy: "48", r: "5", fill: "#4E342E" }), React.createElement('path', { d: "M 50 58 Q 50 63 55 63 Q 50 63 45 63 Z", fill: "#4E342E" }), React.createElement('line', { x1: "50", y1: "63", x2: "50", y2: "72", stroke: "#4E342E", strokeWidth: "2" }))));
const CharacterMoose: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('path', { d: "M 5,35 C 5,15 20,15 20,25 C 25,10 40,10 40,25 V 35 C 50,25 50,25 50,35 H 5 Z", fill: "#BCAAA4" }), React.createElement('path', { d: "M 95,35 C 95,15 80,15 80,25 C 75,10 60,10 60,25 V 35 C 50,25 50,25 50,35 H 95 Z", fill: "#BCAAA4" }), React.createElement('circle', { cx: "50", cy: "60", r: "38", fill: "#A1887F" }), React.createElement('circle', { cx: "50", cy: "70", r: "20", fill: "#D7CCC8" }), React.createElement('circle', { cx: "38", cy: "55", r: "5", fill: "black" }), React.createElement('circle', { cx: "62", cy: "55", r: "5", fill: "black" }), React.createElement('ellipse', { cx: "50", cy: "75", rx: "10", ry: "6", fill: "#5D4037" }))));
const CharacterPug: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "pugGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFD180' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#F57C00' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#pugGradient)" }), React.createElement('path', { d: "M 30,55 C 20,35 60,35 50,55 C 60,75 20,75 30,55 Z", fill: "#A1887F", opacity: "0.8" }), React.createElement('path', { d: "M 70,55 C 80,35 40,35 50,55 C 40,75 80,75 70,55 Z", fill: "#A1887F", opacity: "0.8" }), React.createElement('circle', { cx: "38", cy: "52", r: "10", fill: "white" }), React.createElement('circle', { cx: "62", cy: "52", r: "10", fill: "white" }), React.createElement('circle', { cx: "38", cy: "52", r: "6", fill: "#4E342E" }), React.createElement('circle', { cx: "62", cy: "52", r: "6", fill: "#4E342E" }), React.createElement('circle', { cx: "35", cy: "49", r: "3", fill: "white", opacity: "0.7" }), React.createElement('circle', { cx: "59", cy: "49", r: "3", fill: "white", opacity: "0.7" }), React.createElement('path', { d: "M 48 68 C 50 72, 54 72, 56 68 L 52 64 Z", fill: "#4E342E" }))));
const CharacterCat: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "catGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFD54F' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#FFB300' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#catGradient)" }), React.createElement('polygon', { points: "15,50 35,10 50,35", fill: "#FFB300" }), React.createElement('polygon', { points: "85,50 65,10 50,35", fill: "#FFB300" }), React.createElement('circle', { cx: "35", cy: "55", r: "8", fill: "white" }), React.createElement('circle', { cx: "65", cy: "55", r: "8", fill: "white" }), React.createElement('path', { d: "M32 55 a5 5 0 0 1 6 0", fill: "black", transform: "scale(1, 1.3) translate(-1, -12)" }), React.createElement('path', { d: "M62 55 a5 5 0 0 1 6 0", fill: "black", transform: "scale(1, 1.3) translate(-1, -12)" }), React.createElement('path', { d: "M 50 65 L 50 70", stroke: "#A1887F", strokeWidth: "2" }), React.createElement('path', { d: "M 50 70 C 45 75, 40 70, 40 65", stroke: "#A1887F", strokeWidth: "2", fill: "none" }), React.createElement('path', { d: "M 50 70 C 55 75, 60 70, 60 65", stroke: "#A1887F", strokeWidth: "2", fill: "none" }))));
const CharacterMouse: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "mouseGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#E0E0E0' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#BDBDBD' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "25", cy: "30", r: "20", fill: "#BDBDBD" }), React.createElement('circle', { cx: "75", cy: "30", r: "20", fill: "#BDBDBD" }), React.createElement('circle', { cx: "25", cy: "30", r: "14", fill: "#F8BBD0" }), React.createElement('circle', { cx: "75", cy: "30", r: "14", fill: "#F8BBD0" }), React.createElement('circle', { cx: "50", cy: "60", r: "38", fill: "url(#mouseGradient)" }), React.createElement('circle', { cx: "38", cy: "55", r: "5", fill: "black" }), React.createElement('circle', { cx: "62", cy: "55", r: "5", fill: "black" }), React.createElement('path', { d: "M 50 65 C 48 68, 52 68, 50 65 Z", fill: "#F48FB1" }), React.createElement('path', { d: "M30 65 L20 60 M30 70 L20 70", stroke: "black", strokeWidth: "2", fill: "none", strokeLinecap: "round" }), React.createElement('path', { d: "M70 65 L80 60 M70 70 L80 70", stroke: "black", strokeWidth: "2", fill: "none", strokeLinecap: "round" }))));
const CharacterRabbit: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "rabbitGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FFFFFF' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#EEEEEE' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('rect', { x: "25", y: "0", width: "20", height: "55", rx: "10", fill: "#E0E0E0" }), React.createElement('rect', { x: "55", y: "0", width: "20", height: "55", rx: "10", fill: "#E0E0E0" }), React.createElement('rect', { x: "30", y: "5", width: "10", height: "45", rx: "5", fill: "#F8BBD0" }), React.createElement('rect', { x: "60", y: "5", width: "10", height: "45", rx: "5", fill: "#F8BBD0" }), React.createElement('circle', { cx: "50", cy: "60", r: "38", fill: "url(#rabbitGradient)" }), React.createElement('circle', { cx: "38", cy: "55", r: "5", fill: "#D32F2F" }), React.createElement('circle', { cx: "62", cy: "55", r: "5", fill: "#D32F2F" }), React.createElement('path', { d: "M 48 68 L 52 68 M 50 68 L 50 72 M 46 72 L 54 72", stroke: "black", strokeWidth: "2", strokeLinecap: "round" }), React.createElement('path', { d: "M35 60 L15 55 M35 65 L15 65 M35 70 L15 75", stroke: "black", strokeWidth: "2", fill: "none", strokeLinecap: "round" }), React.createElement('path', { d: "M65 60 L85 55 M65 65 L85 65 M65 70 L85 75", stroke: "black", strokeWidth: "2", fill: "none", strokeLinecap: "round" }))));
const CharacterFox: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "foxGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#FF7043' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#F4511E' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('polygon', { points: "15,50 35,10 50,35", fill: "#455A64" }), React.createElement('polygon', { points: "85,50 65,10 50,35", fill: "#455A64" }), React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#foxGradient)" }), React.createElement('path', { d: "M 50,60 C 30,105 70,105 50,60 Z", fill: "white" }), React.createElement('circle', { cx: "35", cy: "48", r: "6", fill: "black" }), React.createElement('circle', { cx: "65", cy: "48", r: "6", fill: "black" }), React.createElement('polygon', { points: "48,58 52,58 50,62", fill: "black" }))));
const CharacterWolf: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "wolfGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#9E9E9E' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#616161' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('polygon', { points: "15,50 35,10 50,35", fill: "#616161" }), React.createElement('polygon', { points: "85,50 65,10 50,35", fill: "#616161" }), React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#wolfGradient)" }), React.createElement('path', { d: "M 50,60 C 30,105 70,105 50,60 Z", fill: "#E0E0E0" }), React.createElement('circle', { cx: "35", cy: "48", r: "6", fill: "#FFC107" }), React.createElement('circle', { cx: "65", cy: "48", r: "6", fill: "#FFC107" }), React.createElement('path', { d: "M32 48 a4 4 0 0 1 6 0", fill: "black" }), React.createElement('path', { d: "M62 48 a4 4 0 0 1 6 0", fill: "black" }), React.createElement('polygon', { points: "48,58 52,58 50,62", fill: "black" }))));
const CharacterRaccoon: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "raccoonGradient", cx: "50%", cy: "50%", r: "50%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#B0BEC5' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#78909C' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "25", cy: "28", r: "15", fill: "#78909C" }), React.createElement('circle', { cx: "75", cy: "28", r: "15", fill: "#78909C" }), React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "url(#raccoonGradient)" }), React.createElement('path', { d: "M 20,50 a 30,20 0 1,0 60,0 a 30,20 0 1,0 -60,0", fill: "#455A64" }), React.createElement('path', { d: "M 30,50 a 20,15 0 1,0 40,0 a 20,15 0 1,0 -40,0", fill: "#ECEFF1" }), React.createElement('circle', { cx: "35", cy: "50", r: "5", fill: "black" }), React.createElement('circle', { cx: "65", cy: "50", r: "5", fill: "black" }), React.createElement('polygon', { points: "48,60 52,60 50,64", fill: "black" }))));
const CharacterPanda: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "25", cy: "28", r: "20", fill: "#263238" }), React.createElement('circle', { cx: "75", cy: "28", r: "20", fill: "#263238" }), React.createElement('circle', { cx: "50", cy: "50", r: "45", fill: "white" }), React.createElement('ellipse', { cx: "35", cy: "50", rx: "15", ry: "12", fill: "#263238" }), React.createElement('ellipse', { cx: "65", cy: "50", rx: "15", ry: "12", fill: "#263238" }), React.createElement('circle', { cx: "35", cy: "50", r: "5", fill: "white" }), React.createElement('circle', { cx: "65", cy: "50", r: "5", fill: "white" }), React.createElement('circle', { cx: "32", cy: "48", r: "2", fill: "white", opacity: "0.7" }), React.createElement('circle', { cx: "62", cy: "48", r: "2", fill: "white", opacity: "0.7" }), React.createElement('path', { d: "M 50 65 Q 50 70 55 70 Q 50 70 45 70 Z", fill: "#263238" }), React.createElement('path', { d: "M45 75 C 48 80, 52 80, 55 75", stroke: "#263238", strokeWidth: "2", fill: "none", strokeLinecap: "round" }))));
const CharacterFrog: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "frogGradient", cx: "50%", cy: "40%", r: "60%" }, React.createElement('stop', { offset: "0%", style: { stopColor: '#8BC34A' } }), React.createElement('stop', { offset: "100%", style: { stopColor: '#558B2F' } }))), React.createElement('g', { filter: "url(#dropShadow)" }, React.createElement('circle', { cx: "50", cy: "55", r: "45", fill: "url(#frogGradient)" }), React.createElement('ellipse', { cx: "35", cy: "35", rx: "15", ry: "20", fill: "white" }), React.createElement('ellipse', { cx: "65", cy: "35", rx: "15", ry: "20", fill: "white" }), React.createElement('circle', { cx: "35", cy: "35", r: "8", fill: "black" }), React.createElement('circle', { cx: "65", cy: "35", r: "8", fill: "black" }), React.createElement('circle', { cx: "32", cy: "32", r: "3", fill: "white" }), React.createElement('circle', { cx: "62", cy: "32", r: "3", fill: "white" }), React.createElement('path', { d: "M 30 70 C 40 85, 60 85, 70 70", stroke: "black", strokeWidth: "4", fill: "none", strokeLinecap: "round" }))));
const CharacterGhost: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('defs', null, React.createElement('radialGradient', { id: "ghostGradient", cx: "50%", cy: "40%", r: "60%" }, React.createElement('stop', { offset: "0%", stopColor: "white", stopOpacity: "1" }), React.createElement('stop', { offset: "100%", stopColor: "#E0F7FA", stopOpacity: "1" }))), React.createElement('g', { opacity: "0.9", filter: "url(#dropShadow)" }, React.createElement('path', { d: "M20 90 Q 25 80 30 90 T 40 90 T 50 90 T 60 90 T 70 90 T 80 90 V 40 C 80 15 20 15 20 40 Z", fill: "url(#ghostGradient)" }), React.createElement('circle', { cx: "38", cy: "50", r: "7", fill: "black" }), React.createElement('circle', { cx: "62", cy: "50", r: "7", fill: "black" }), React.createElement('path', { d: "M40 65 Q 50 80 60 65", stroke: "black", strokeWidth: "4", fill: "none", strokeLinecap: "round" }))));

// --- SVG Components for Accessories ---
const AccessoryHearts: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#F44336", d: "M20 18c-4-4-10-4-14 0-4 4-4 10 0 14l14 14 14-14c4-4 4-10 0-14s-10-4-14 0zm60 0c-4-4-10-4-14 0-4 4-4 10 0 14l14 14 14-14c4-4 4-10 0-14s-10-4-14 0zM40 8c-4-4-10-4-14 0-4 4-4 10 0 14l14 14 14-14c4-4 4-10 0-14s-10-4-14 0z" })));
const AccessoryHeartGlasses: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('g', { fill: "#F44336", fillRule: "nonzero" }, React.createElement('path', { d: "M42 42c-8 0-15 7-15 15 0 8 15 20 15 20s15-12 15-20c0-8-7-15-15-15zm31 0c-8 0-15 7-15 15 0 8 15 20 15 20s15-12 15-20c0-8-7-15-15-15z" }), React.createElement('path', { d: "M57 57h-9c-1 0-1-1-1-1v-5h11v5c0 1-1 1-1 1z" }))));
const AccessoryUshanka: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#8D6E63", d: "M85 60c0 10-15 15-35 15S15 70 15 60v-5h70v5z" }), React.createElement('path', { fill: "#A1887F", d: "M80 25c-5 0-10 15-30 15S20 25 15 25c-5 0-10 10-10 20v10h90V45c0-10-5-20-10-20z" }), React.createElement('path', { fill: "#CFD8DC", d: "M15 60v15h10V60zm60 0v15h10V60z" }), React.createElement('path', { fill: "#F44336", d: "M50 20l5 10h-10z" })));
const AccessoryGreenBeanie: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#4CAF50", d: "M85 40c0-20-15-30-35-30S15 20 15 40v20h70V40z" }), React.createElement('path', { fill: "#388E3C", d: "M85 60v10H15V60z" }), React.createElement('path', { fill: "#FFF", d: "M40 45l-5 5 5 5 5-5zm20 0l-5 5 5 5 5-5zm-10 10l-5 5 5 5 5-5z" })));
const AccessoryRedBeanie: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#F44336", d: "M85 40c0-20-15-30-35-30S15 20 15 40v20h70V40z" }), React.createElement('path', { fill: "#D32F2F", d: "M85 60v10H15V60z" }), React.createElement('path', { fill: "#FFF", d: "M50 25a5 5 0 100 10 5 5 0 000-10z" })));
const AccessoryBlueBeanie: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#2196F3", d: "M85 40c0-20-15-30-35-30S15 20 15 40v20h70V40z" }), React.createElement('path', { fill: "#1976D2", d: "M85 60v10H15V60z" }), React.createElement('path', { fill: "#FFF", d: "M50 45l-5 5 5 5 5-5zm-15-5l-5 5 5 5 5-5zm30 0l-5 5 5 5 5-5z" })));
const AccessoryEarmuffs: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { stroke: "#A1887F", strokeWidth: "8", fill: "none", d: "M25 60A25 25 0 0 1 75 60" }), React.createElement('circle', { fill: "#FFF", cx: "25", cy: "60", r: "12" }), React.createElement('circle', { fill: "#FFCDD2", cx: "25", cy: "60", r: "8" }), React.createElement('circle', { fill: "#FFF", cx: "75", cy: "60", r: "12" }), React.createElement('circle', { fill: "#FFCDD2", cx: "75", cy: "60", r: "8" })));
const AccessoryDragonMask: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#f44336", d: "M50 30c-25 0-40 20-40 40h80c0-20-15-40-40-40z" }), React.createElement('path', { fill: "#ffeb3b", d: "M30 50h40v10H30zm-5-15h50v5H25zm10 30h30v5H35z" }), React.createElement('path', { fill: "#fff", d: "M35 55a5 5 0 100-10 5 5 0 000 10zm30 0a5 5 0 100-10 5 5 0 000 10z" }), React.createElement('path', { fill: "#000", d: "M35 52.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm30 0a2.5 2.5 0 100-5 2.5 2.5 0 000 5z" }), React.createElement('path', { fill: "#ffeb3b", d: "M10 70l-5 5h15l-5-5zm80 0l5 5H80l5-5z" }), React.createElement('path', { fill: "#4caf50", d: "M50 25c-5 0-5-10 0-10s5 10 0 10z" })));
const AccessorySkiGoggles: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#3F51B5", d: "M90 45H10c-5 0-5 20 0 20h80c5 0 5-20 0-20z" }), React.createElement('path', { fill: "#2196F3", d: "M45 48h-30c-3 0-3 14 0 14h30c3 0 3-14 0-14zm40 0h-30c-3 0-3 14 0 14h30c3 0 3-14 0-14z" }), React.createElement('path', { fill: "#FFF", d: "M50 45v20h2v-20z" })));
const AccessoryPinkSunglasses: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#E91E63", d: "M90 50H10c-5 0-5 15 0 15h80c5 0 5-15 0-15z" }), React.createElement('path', { d: "M45 53l-30 10v-6l30-10zm40 0l-30 10v-6l30-10z", fill: "#F8BBD0" }), React.createElement('path', { fill: "#E91E63", d: "M55 50h-10v5h10z" })));
const AccessoryKCap: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#673AB7", d: "M90 45c0-15-15-20-40-20S10 30 10 45h80z" }), React.createElement('path', { fill: "#512DA8", d: "M95 45H5c-5 0-5 10 0 10h90c5 0 5-10 0-10z" }), React.createElement('path', { fill: "#FFF", d: "M45 35l5-10 5 10-5-2zm10 5l-5 8h10l-2-8z" })));
const AccessoryFlowerCrown: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('g', null, React.createElement('circle', { fill: "#F48FB1", cx: "25", cy: "35", r: "8" }), React.createElement('circle', { fill: "#FFF", cx: "25", cy: "35", r: "3" }), React.createElement('circle', { fill: "#CE93D8", cx: "40", cy: "28", r: "8" }), React.createElement('circle', { fill: "#FFF", cx: "40", cy: "28", r: "3" }), React.createElement('circle', { fill: "#81D4FA", cx: "60", cy: "28", r: "8" }), React.createElement('circle', { fill: "#FFF", cx: "60", cy: "28", r: "3" }), React.createElement('circle', { fill: "#A5D6A7", cx: "75", cy: "35", r: "8" }), React.createElement('circle', { fill: "#FFF", cx: "75", cy: "35", r: "3" }), React.createElement('circle', { fill: "#FFCC80", cx: "50", cy: "25", r: "10" }), React.createElement('circle', { fill: "#FFF", cx: "50", cy: "25", r: "4" }))));
const AccessoryCrown: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#FFC107", d: "M10 40h80v20H10z" }), React.createElement('path', { fill: "#FFEB3B", d: "M10 40l15-20 15 20zm20 0l15-20 15 20zm20 0l15-20 15 20z" }), React.createElement('circle', { fill: "#F44336", cx: "25", cy: "45", r: "5" }), React.createElement('circle', { fill: "#2196F3", cx: "50", cy: "45", r: "5" }), React.createElement('circle', { fill: "#4CAF50", cx: "75", cy: "45", r: "5" })));
const AccessoryVikingHelmet: React.FC<{ className?: string }> = ({ className }) => (React.createElement('svg', { className, viewBox: "0 0 100 100" }, React.createElement('path', { fill: "#795548", d: "M80 40c0-15-10-25-30-25s-30 10-30 25v10h60z" }), React.createElement('path', { fill: "#BDBDBD", d: "M10 45c-10-15 0-35 15-30 10 5 0 25-15 30zm80 0c10-15 0-35-15-30-10 5 0 25 15 30z" }), React.createElement('path', { fill: "#FFEB3B", d: "M40 50h20v10H40z" })));

type CharacterComponent = React.FC<{ className?: string }>;

export interface CharacterAsset {
    component: CharacterComponent;
    name: string;
}

export interface AccessoryAsset extends CharacterAsset {
    position: AccessoryPosition;
}

export const BASE_CHARACTER_MAP: Record<string, CharacterAsset> = {
    'sun': { component: CharacterSun, name: 'Sun' },
    'polar_bear': { component: CharacterPolarBear, name: 'Polar Bear' },
    'penguin': { component: CharacterPenguin, name: 'Penguin' },
    'snowman': { component: CharacterSnowman, name: 'Snowman' },
    'bear': { component: CharacterBear, name: 'Bear' },
    'moose': { component: CharacterMoose, name: 'Moose' },
    'pug': { component: CharacterPug, name: 'Pug' },
    'cat': { component: CharacterCat, name: 'Cat' },
    'mouse': { component: CharacterMouse, name: 'Mouse' },
    'rabbit': { component: CharacterRabbit, name: 'Rabbit' },
    'fox': { component: CharacterFox, name: 'Fox' },
    'wolf': { component: CharacterWolf, name: 'Wolf' },
    'raccoon': { component: CharacterRaccoon, name: 'Raccoon' },
    'panda': { component: CharacterPanda, name: 'Panda' },
    'frog': { component: CharacterFrog, name: 'Frog' },
};

export const ACCESSORY_MAP: Record<string, AccessoryAsset> = {
    'hearts': { component: AccessoryHearts, name: 'Hearts', position: 'head' },
    'heart_glasses': { component: AccessoryHeartGlasses, name: 'Heart Glasses', position: 'eyes' },
    'ushanka': { component: AccessoryUshanka, name: 'Ushanka', position: 'head' },
    'green_beanie': { component: AccessoryGreenBeanie, name: 'Green Beanie', position: 'head' },
    'red_beanie': { component: AccessoryRedBeanie, name: 'Red Beanie', position: 'head' },
    'blue_beanie': { component: AccessoryBlueBeanie, name: 'Blue Beanie', position: 'head' },
    'earmuffs': { component: AccessoryEarmuffs, name: 'Earmuffs', position: 'face' },
    'dragon_mask': { component: AccessoryDragonMask, name: 'Dragon Mask', position: 'face' },
    'ski_goggles': { component: AccessorySkiGoggles, name: 'Ski Goggles', position: 'eyes' },
    'pink_sunglasses': { component: AccessoryPinkSunglasses, name: 'Pink Sunglasses', position: 'eyes' },
    'k_cap': { component: AccessoryKCap, name: 'K! Cap', position: 'head' },
    'flower_crown': { component: AccessoryFlowerCrown, name: 'Flower Crown', position: 'head' },
    'crown': { component: AccessoryCrown, name: 'Crown', position: 'head' },
    'viking_helmet': { component: AccessoryVikingHelmet, name: 'Viking Helmet', position: 'head' },
};

export const GHOST_CHARACTER: CharacterAsset = { component: CharacterGhost, name: 'Ghost' };
